<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	
<security:global-method-security secured-annotations="enabled" />

    <!-- enable use-expressions -->
	<security:http auto-config="true" use-expressions="true"  access-denied-page="/403.jsp">
		<security:intercept-url pattern="/insert1" access="hasRole('ROLE_ADMIN')"/>  		
		<security:intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')"/>  
		 <security:intercept-url pattern="/welcome**" access="hasRole('ROLE_USER')"  /> 
		  <security:intercept-url pattern="/degree" access="hasRole('ROLE_USER')"  />
		 <security:intercept-url pattern="/24game" access="hasRole('ROLE_USER')"  /> 
		 <security:intercept-url pattern="/ranking" access="hasRole('ROLE_USER')"  /> 
		
		 
		<security:form-login 
		    login-page="/login" 
		    default-target-url="/welcome" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
			
		<security:logout logout-success-url="/login?logout"  />
		<!-- enable csrf protection
		It also add token in post request page
		REF: http://docs.spring.io/spring-security/site/docs/3.2.0.CI-SNAPSHOT/reference/html/csrf.html
		 -->
		<security:csrf/>
	</security:http>
	<!-- Select users and user_roles from database -->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query=
					"select username,password, enabled from users where username=?"
				authorities-by-username-query=
					"select username, role from user_roles where username =?" />
		   <security:password-encoder hash="md5"/>  
		</security:authentication-provider>
	</security:authentication-manager>
	<!--  
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query=
					"select username,password, enabled from users where username=?"
				authorities-by-username-query=
					"select username, role from user_roles where username =?  " />
		</authentication-provider>
	</authentication-manager>
	-->
</beans>